# medisecure-backend/docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: medisecure-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medisecure
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medisecure-network

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: medisecure-api
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/medisecure
      - ENVIRONMENT=docker
      - HOST=0.0.0.0
      - PORT=8000
      - JWT_SECRET_KEY=your-super-secret-key-change-this-in-production
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=medisecure
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: ["/start.sh"]
    networks:
      - medisecure-network

  frontend:
    build:
      context: ../medisecure-frontend
      dockerfile: Dockerfile
    container_name: medisecure-frontend
    environment:
      - VITE_API_URL=http://localhost:8000/api
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - medisecure-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: medisecure-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@medisecure.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - medisecure-network

volumes:
  postgres_data:

networks:
  medisecure-network:
    driver: bridge